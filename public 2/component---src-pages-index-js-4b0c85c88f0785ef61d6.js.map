{"version":3,"file":"component---src-pages-index-js-4b0c85c88f0785ef61d6.js","mappings":"0OAuCA,EA/BuB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACxB,OAAKA,GACAC,MAAMC,QAAQF,GAGjB,gBAAC,IAAD,KACE,sBAAIG,UCbe,+CDchBH,EAAMI,KAAI,SAACC,GACV,OACE,sBAAIC,IAAKD,EAAKE,MACZ,gBAAC,EAAAC,KAAD,CAAMC,GAAE,SAAWJ,EAAKE,KAAQJ,UChB5B,uCDiBF,gBAAC,EAAAO,EAAD,CAAaC,IAAI,GAAGC,MAAOP,EAAKQ,UAAUC,kBAC1C,sBAAIX,UChBD,wCDgB2BE,EAAKU,QAErC,uBACEC,wBAAyB,CACvBC,OAAQZ,EAAKa,YAAYC,oBAAoBC,QAGjD,uBAAKjB,UCxBD,uCDyBF,yBAAOA,UAAU,QAAQE,EAAKgB,aAC9B,gBAAC,IAAD,CAAMC,KAAMjB,EAAKiB,cApBZ,O,qJEkBrB,EAtBgB,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACd,OAAIA,GACAtB,MAAMC,QAAQqB,GAGd,gBAAC,IAAD,KACI,sBAAIpB,UCTW,2CDUVoB,EAAQnB,KAAI,SAACoB,GAAU,IAAD,IACnB,OACI,sBAAIlB,IAAKkB,EAAKC,eAAgBtB,UCb3B,2CDcC,sBAAIA,UCVb,kCDUuCqB,EAAKC,gBACnC,uBACAT,wBAAyB,CAACC,OAAM,UAACO,EAAKE,qBAAN,iBAAC,EAAoBP,2BAArB,aAAC,EAAyCC,cAX9E,MEGlBO,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAiBH,OAjBGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJC,OAAA,WACE,IAAM5B,EAAM6B,GAAAA,CAAIC,KAAK,0CACdC,EAAQF,GAAAA,CAAIC,KAAK,wCAAxB,GACME,EAAUH,GAAAA,CAAIC,KAAK,2CAEzB,OACE,gBAAC,IAAD,CAAQG,SAAUH,KAAKI,MAAMD,UAC3B,gBAAC,IAAD,CACErB,MAAOmB,EAAOlB,UAAUC,gBACxBC,MAAOgB,EAAOI,KACdZ,QAASQ,EAAOK,SAASA,WAE3B,gBAAC,EAAD,CAAWb,QAASS,IACpB,gBAAC,IAAD,CAAgBhC,MAAOA,MAG5B,EAjBG2B,CAAkBU,EAAAA,WAoBxB","sources":["webpack://contentful-starter-gatsby-blog/./src/components/article-preview.js","webpack://contentful-starter-gatsby-blog/./src/components/article-preview.module.css","webpack://contentful-starter-gatsby-blog/./src/components/expertise.js","webpack://contentful-starter-gatsby-blog/./src/components/expertise.module.css","webpack://contentful-starter-gatsby-blog/./src/pages/index.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nimport Container from './container'\nimport Tags from './tags'\nimport * as styles from './article-preview.module.css'\n\nconst ArticlePreview = ({ posts }) => {\n  if (!posts) return null\n  if (!Array.isArray(posts)) return null\n\n  return (\n    <Container>\n      <ul className={styles.articleList}>\n        {posts.map((post) => {\n          return (\n            <li key={post.slug}>\n              <Link to={`/blog/${post.slug}`} className={styles.link}>\n                <GatsbyImage alt=\"\" image={post.heroImage.gatsbyImageData} />\n                <h2 className={styles.title}>{post.title}</h2>\n              </Link>\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: post.description.childMarkdownRemark.html,\n                }}\n              />\n              <div className={styles.meta}>\n                <small className=\"meta\">{post.publishDate}</small>\n                <Tags tags={post.tags} />\n              </div>\n            </li>\n          )\n        })}\n      </ul>\n    </Container>\n  )\n}\n\nexport default ArticlePreview\n","// extracted by mini-css-extract-plugin\nexport var articleList = \"article-preview-module--article-list--2zSz0\";\nexport var link = \"article-preview-module--link--3fhjt\";\nexport var meta = \"article-preview-module--meta--D6_bt\";\nexport var title = \"article-preview-module--title--1Uq8k\";","import React from 'react'\n\nimport Container from './container'\nimport * as styles from './expertise.module.css'\n\nconst Expertise=({content}) => {\n    if(!content) return null\n    if(!Array.isArray(content)) return null\n\n    return (\n        <Container>\n            <ul className={styles.expertiseList}>\n                {content.map((text) => {\n                    return (\n                        <li key={text.expertiseTitle} className={styles.expertiseItem}>\n                            <h1 className={styles.title}>{text.expertiseTitle}</h1>\n                            <div\n                            dangerouslySetInnerHTML={{__html:text.expertiseText?.childMarkdownRemark?.html}}\n                            />\n                        </li>\n                    )\n                })}\n            </ul>\n        </Container>\n    )\n}\n\nexport default Expertise\n","// extracted by mini-css-extract-plugin\nexport var expertiseItem = \"expertise-module--expertise-item--1-Zg-\";\nexport var expertiseList = \"expertise-module--expertise-list--2Ebpr\";\nexport var link = \"expertise-module--link--Jcyia\";\nexport var meta = \"expertise-module--meta--3MlBb\";\nexport var title = \"expertise-module--title--3NrWg\";","import React from 'react'\nimport {graphql} from 'gatsby'\nimport get from 'lodash/get'\n\nimport Layout from '../components/layout'\nimport Hero from '../components/hero'\nimport ArticlePreview from '../components/article-preview'\nimport Expertise from '../components/expertise'\n\nclass RootIndex extends React.Component {\n  render() {\n    const posts=get(this,'props.data.allContentfulBlogPost.nodes')\n    const [author]=get(this,'props.data.allContentfulPerson.nodes')\n    const expertise=get(this,'props.data.allContentfulExpertise.nodes')\n\n    return (\n      <Layout location={this.props.location}>\n        <Hero\n          image={author.heroImage.gatsbyImageData}\n          title={author.name}\n          content={author.shortBio.shortBio}\n        />\n        <Expertise content={expertise} />\n        <ArticlePreview posts={posts} />\n      </Layout>\n    )\n  }\n}\n\nexport default RootIndex\n\nexport const pageQuery=graphql`\n  query HomeQuery {\n    allContentfulBlogPost(sort: { fields: [publishDate], order: DESC }) {\n      nodes {\n        title\n        slug\n        publishDate(formatString: \"MMMM Do, YYYY\")\n        tags\n        heroImage {\n          gatsbyImageData(\n            layout: FULL_WIDTH\n            placeholder: BLURRED\n            width: 424\n            height: 212\n          )\n        }\n        description {\n          childMarkdownRemark {\n            html\n          }\n        }\n      }\n    }\n    allContentfulPerson (\n      filter: { contentful_id: { eq: \"15jwOBqpxqSAOy2eOO4S0m\" } }\n    ) {\n      nodes {\n        name\n        shortBio {\n          shortBio\n        }\n        title\n        heroImage: image {\n          gatsbyImageData(\n            layout: CONSTRAINED\n            placeholder: BLURRED\n            width: 1180\n          )\n        }\n      }\n    }\n    allContentfulExpertise (filter: {node_locale: {eq: \"en-GB\"}}) {\n      nodes {\n        expertiseTitle\n        expertiseText {\n        childMarkdownRemark {\n          html\n        }\n      }\n  }\n  }\n  }\n`\n"],"names":["posts","Array","isArray","className","map","post","key","slug","Link","to","G","alt","image","heroImage","gatsbyImageData","title","dangerouslySetInnerHTML","__html","description","childMarkdownRemark","html","publishDate","tags","content","text","expertiseTitle","expertiseText","RootIndex","render","get","this","author","expertise","location","props","name","shortBio","React"],"sourceRoot":""}